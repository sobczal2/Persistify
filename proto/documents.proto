syntax = "proto3";
package Persistify.Services;
import "protobuf-net/bcl.proto"; // schema for protobuf-net's handling of core .NET types

message AllSearchQueryDto {
}
message AndSearchQueryDto {
   repeated SearchQueryDto SearchQueryDtos = 2;
}
message BinaryFieldValueDto {
   bytes Value = 2;
}
message BoolFieldValueDto {
   bool Value = 2;
}
message CreateDocumentRequest {
   string TemplateName = 1;
   repeated FieldValueDto FieldValueDtos = 2;
}
message CreateDocumentResponse {
   int32 DocumentId = 1;
}
message DateTimeFieldValueDto {
   .bcl.DateTime Value = 2;
}
message DeleteDocumentRequest {
   string TemplateName = 1;
   int32 DocumentId = 2;
}
message DeleteDocumentResponse {
}
message DocumentDto {
   int32 Id = 1;
   repeated FieldValueDto FieldValueDtos = 2;
}
message ExactBoolSearchQueryDto {
   string FieldName = 2;
   bool Value = 3;
}
message ExactDateTimeSearchQueryDto {
   string FieldName = 2;
   .bcl.DateTime Value = 3;
}
message ExactNumberSearchQueryDto {
   string FieldName = 2;
   double Value = 3;
}
message ExactTextSearchQueryDto {
   string FieldName = 2;
   string Value = 3;
}
message ExistsDocumentRequest {
   string TemplateName = 1;
   int32 DocumentId = 2;
}
message ExistsDocumentResponse {
   bool Exists = 1;
}
message FieldValueDto {
   string FieldName = 1;
   oneof subtype {
      BoolFieldValueDto BoolFieldValueDto = 100;
      NumberFieldValueDto NumberFieldValueDto = 101;
      TextFieldValueDto TextFieldValueDto = 102;
      DateTimeFieldValueDto DateTimeFieldValueDto = 103;
      BinaryFieldValueDto BinaryFieldValueDto = 104;
   }
}
message FullTextSearchQueryDto {
   string FieldName = 2;
   string Value = 3;
}
message GetDocumentRequest {
   string TemplateName = 1;
   int32 DocumentId = 2;
}
message GetDocumentResponse {
   DocumentDto DocumentDto = 1;
}
message GreaterDateTimeSearchQueryDto {
   string FieldName = 2;
   .bcl.DateTime Value = 3;
}
message GreaterNumberSearchQueryDto {
   string FieldName = 2;
   double Value = 3;
}
message LessDateTimeSearchQueryDto {
   .bcl.DateTime Value = 2;
   string FieldName = 3;
}
message LessNumberSearchQueryDto {
   string FieldName = 2;
   double Value = 3;
}
message NotSearchQueryDto {
   SearchQueryDto SearchQueryDto = 2;
}
message NumberFieldValueDto {
   double Value = 2;
}
message OrSearchQueryDto {
   repeated SearchQueryDto SearchQueryDtos = 2;
}
message PaginationDto {
   int32 PageNumber = 1;
   int32 PageSize = 2;
}
message RangeDateTimeSearchQueryDto {
   string FieldName = 2;
   .bcl.DateTime MinValue = 3;
   .bcl.DateTime MaxValue = 4;
}
message RangeNumberSearchQueryDto {
   string FieldName = 2;
   double MinValue = 3;
   double MaxValue = 4;
}
message SearchDocumentsRequest {
   string TemplateName = 1;
   PaginationDto PaginationDto = 2;
   SearchQueryDto SearchQueryDto = 3;
}
message SearchDocumentsResponse {
   repeated SearchRecordDto SearchRecordDtos = 1;
   int32 TotalCount = 2;
}
message SearchMetadataDto {
   string Name = 1;
   string Value = 2;
}
message SearchQueryDto {
   float Boost = 1;
   oneof subtype {
      AndSearchQueryDto AndSearchQueryDto = 100;
      NotSearchQueryDto NotSearchQueryDto = 101;
      OrSearchQueryDto OrSearchQueryDto = 102;
      AllSearchQueryDto AllSearchQueryDto = 103;
      ExactBoolSearchQueryDto ExactBoolSearchQueryDto = 200;
      ExactNumberSearchQueryDto ExactNumberSearchQueryDto = 300;
      GreaterNumberSearchQueryDto GreaterNumberSearchQueryDto = 301;
      LessNumberSearchQueryDto LessNumberSearchQueryDto = 302;
      RangeNumberSearchQueryDto RangeNumberSearchQueryDto = 303;
      ExactTextSearchQueryDto ExactTextSearchQueryDto = 400;
      FullTextSearchQueryDto FullTextSearchQueryDto = 401;
      ExactDateTimeSearchQueryDto ExactDateTimeSearchQueryDto = 500;
      GreaterDateTimeSearchQueryDto GreaterDateTimeSearchQueryDto = 501;
      LessDateTimeSearchQueryDto LessDateTimeSearchQueryDto = 502;
      RangeDateTimeSearchQueryDto RangeDateTimeSearchQueryDto = 503;
   }
}
message SearchRecordDto {
   DocumentDto DocumentDto = 1;
   repeated SearchMetadataDto MetadataList = 2;
}
message TextFieldValueDto {
   string Value = 2;
}
service DocumentService {
   rpc CreateDocument (CreateDocumentRequest) returns (CreateDocumentResponse);
   rpc DeleteDocument (DeleteDocumentRequest) returns (DeleteDocumentResponse);
   rpc ExistsDocument (ExistsDocumentRequest) returns (ExistsDocumentResponse);
   rpc GetDocument (GetDocumentRequest) returns (GetDocumentResponse);
   rpc SearchDocuments (SearchDocumentsRequest) returns (SearchDocumentsResponse);
}
